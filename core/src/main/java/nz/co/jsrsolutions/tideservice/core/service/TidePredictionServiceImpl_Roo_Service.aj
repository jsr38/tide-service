// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nz.co.jsrsolutions.tideservice.core.service;

import java.util.List;
import nz.co.jsrsolutions.tideservice.core.domain.TidePrediction;
import nz.co.jsrsolutions.tideservice.core.repository.TidePredictionRepository;
import nz.co.jsrsolutions.tideservice.core.service.TidePredictionServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TidePredictionServiceImpl_Roo_Service {
    
    declare @type: TidePredictionServiceImpl: @Service;
    
    declare @type: TidePredictionServiceImpl: @Transactional;
    
    @Autowired
    TidePredictionRepository TidePredictionServiceImpl.tidePredictionRepository;
    
    public long TidePredictionServiceImpl.countAllTidePredictions() {
        return tidePredictionRepository.count();
    }
    
    public void TidePredictionServiceImpl.deleteTidePrediction(TidePrediction tidePrediction) {
        tidePredictionRepository.delete(tidePrediction);
    }
    
    public TidePrediction TidePredictionServiceImpl.findTidePrediction(Long id) {
        return tidePredictionRepository.findOne(id);
    }
    
    public List<TidePrediction> TidePredictionServiceImpl.findAllTidePredictions() {
        return tidePredictionRepository.findAll();
    }
    
    public List<TidePrediction> TidePredictionServiceImpl.findTidePredictionEntries(int firstResult, int maxResults) {
        return tidePredictionRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void TidePredictionServiceImpl.saveTidePrediction(TidePrediction tidePrediction) {
        tidePredictionRepository.save(tidePrediction);
    }
    
    public TidePrediction TidePredictionServiceImpl.updateTidePrediction(TidePrediction tidePrediction) {
        return tidePredictionRepository.save(tidePrediction);
    }
    
}
